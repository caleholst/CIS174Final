Final Requirements:

(150 pts)Final project: Features, functionality, user experience, code style, and coding syntax. 

(10) Proper routing techniques, route templates for website and attribute routing for web api.  - DONE

(20) Using binding models and validating all user input in a logical manner to give the users a good experience and keep your application safe. - DONE

(10) Use tag helpers to create your forms in your web application for a nice user experience. - DONE

(20) Create and utilize a SQL Server database using at least one data context and entity framework core to access the database. Do all your database interactions in services. - DONE
You should have examples of creates, reads, updates, and deletes - DONE

(10) Use MVC filters to clean up your code and remove code redundancy. You should not have repetitious code in the controllers/actions. - DONE 

(10) You should use user accounts, registration, login all using Identity.

(10) You should use authorization to limit access to parts of your application for people that do not have access to them.
You should also have Razor elements that are shown or hidden based on authorization.

(10) Create and utilize state management through Sessions or Cookies - DONE 

(10) Create and utilize proper error handling techniques including having a custom error handling view - DONE

(20)  Unit test your code. You should have tests around all your business logic so everything in your services and such should be tested.
I am expecting 100% coverage on your business logic since your sites are relatively small applications.

(20) Azure works - DONE 

Test